class Solution:
    def largestRectangleArea(self, heights: List[int]) -> int:
        n=len(heights)
        right=[n]*n
        last=n-1
        stack=[]
        stack.append([heights[last],last])
        last-=1
        while last>=0:
            while stack!=[] and heights[last]<=stack[-1][0]:
                stack.pop()
            if stack==[]:
                right[last]=n
            else:
                right[last]=stack[-1][1]
            stack.append([heights[last],last])
            last-=1
        left=[-1]*n
        start=0
        stack=[]
        stack.append([heights[start],start])
        start+=1
        while start<n:
            while stack!=[] and heights[start]<=stack[-1][0]:
                stack.pop()
            if stack==[]:
                left[start]=-1
            else:
                left[start]=stack[-1][1]
            stack.append([heights[start],start])
            start+=1
        print(left,right)
        maxx=-1*10**20
        for i in range(n):
            ar=heights[i]*(right[i]-left[i]-1)
            maxx=max(maxx,ar)
        return maxx
